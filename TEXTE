PRADET Sébastien (directeur ecommerce)
https://www.bluage.com/products/serverless-cobol-quickstart
https://github.com/BluAge/ServerlessCOBOLforAWS
https://www.youtube.com/watch?v=jhB39NlgGl4&feature=youtu.be&t=2806
https://www.itforbusiness.fr/ce-qu-il-faut-retenir-d-aws-re-invent-2018-18837

INTRODUCTION !!!! ARCHI BIEN

Fin 2018, à l'occasion de la conférence AWS Re:invent à Las Vegas, BluAge présente officielement "serverless COBOL for AWS solution", ainsi qu'un compliateur, qui génère et compile en Java une application développer en COBOL. Une solution cohérante avec la volonter d'Amazone de banaliser l'utilisation du "Serverless", cette nouvelle manière, plus flexible, d'héberger des applicaion, des sites web ou des données sur le cloud. 

La solution serverless COBOL for AWS solution va être deployer de manière serverless donc, grâce a des micro environement d'execuion appelé Lambda.
Grâce à cette outils, les developpeur COBOL pourrons appésent continué à utiliser leurs language favorit, tout pouvant compiler des déploer leurs application en java, sur des Lambda Amazone. 

Pourquoi la necessiter de compiler en Java un code écrit en COBOL ? Car le COBOL est en language que l'on pourrais qualifié d'obselete, pourtant, il est encore très présent dans les entreprises. BluAge à pour but d'accompagner ces entreprises dans leurs transitions digital. La plus par de leurs solutions sont des outils pour assiser les devellopeur dans la traduction de leurs applications du COBOL vers le Java ou le .Net. Néanmoins, il est parois difficile pour des developpeur COBOL de se reconvertir vers le Java. Le compilateur proposer par BluAge, permet d'évité les licenciment, sans restrindre l'entreprise dans leurs conversion digital en permetant au developpeur de continué à écrire en COBOL, iut en générant des applications dans un langauge plus moderne, le Java.

Ce compliateur est le 1e produit BluAge à traduire du code à 100%, sans nécéssité aucune inervention humaine; Il est hebergé par amazone est disponible en tant que "Add on" de l'IDE Visual Studio Code. (Le protocole pour mettre en place le compilateur, du point de vue du client est illuster Annexe 1).

A l'heure actuelle, les produits severless de BluAge son mise à disposition du client de manière manuelle. A partir de la console graphique de Amazone, chaque lambda est deployer manuellement dans les regions shouaiter et tester une à une. L'opération peut prendre une demi-journée, voir une journée complète pour chaque nouvelle verion publié. Il semble tèrs intessant, d'automatiser cette chaine de deployment. 

PB : blablabla

La chaîne de deployment va devoir être contruite à partir de zeros, aucun outils ou méthodes n'est déinit. Plusieur solution de prototpe sont envisagable, utilisant des outils classique de DevOps tel que Jenkings, mais aussi des outils très spéciique à Amazone tel que AWS Step function.
Il eiste beacoup de chemains possible, la difficulter sera de choisir celui qui correspondra le mieux au besoin de BluAge. On veux par exemple que la pipeline soit la foix robuste aux erreurs, et flexible, mais aussi qu'elle ne laisse passer aucune informations sensible en claire, en d'autre termes qu'elle soit sécurisé.
Ce rapport présentera la solution définitive pour la pipeline, et mettra en lumière les choix et les compromis qui ont du etre fait.

Réalisation Technique

Nous avons vu dans la partie précédente, la chaîne de production qui doit être réalisé. Pour la concrétiser, une multitude d'options s'offre à nous. Une des tâches de se stage à été de faire des choix, parmis tous les outils, et toute les méthodes possible celles qui serait la plus adéquats. Pour cela, il es important de bien avoir en tête ce que on désir.

Livrables :

Une solution de pipeline devra rescpeer les points suivants : 

     - Doit être parametrables, et ces paramètres doivent être accésibles sans avoir à modifier le code. 
     - Doit être sécurisé, les informations sensible (clef d'accès ect) ne doivent pas être accésible.
     - Doit être peu coûteuse.
     - Ne doit pas nécessiter d'intervention humaines, on cherche à construire une chaîne d'automatisaion, elle doit s'adater à tous les cas de figure possible
     
Dans l'idéal, on pourra également ajouter les livrables suivante : 

     - Le suivit du bon déroulement de la Pipeline doit être facilement lisible
     - Doit être facilement modifiable si lon veux adapter la solution pour d'autre type de produit
     
Présentation des différentes solutions : 

Dans cette section vont être présenter les différentes solutions qui ont été envisagé. Certaine de ces solutions ne concerne qu'un bout de la chaine, et sont parfois combinable.

PROPOSITION #1 : JENKINS

Jenkins est un outils de création de pipeline

PROPOSITION #2 : UTILISER LES OUTILS DE CREATION DE PIPELINE DE AWS

PROPOSITIONS #3 : OUTILS AWS 

Les propositions qui vont suivre permet contourner les outils de pipeline de AWS. Elle demande plus d'effort de programmation, mais on les préfrera pour leurs côut plus faible.
Tous ces outils sont tous de même des outils d'Amazone 

PROPOSITION #3 uno : STEP FUNCTION

AWS Step funcins est un services web qui permet de coordiner les différent composant d'une chaîne d'opération ("Qu'on appelle généralement workflow ou flux d'opéraions"). Cette outils permet de séparé simplement chaque opérations et de pouvoir visualiser et suivre se flux de manière graphique (cf figure). 
Le language pour programmer cete chîne est le "Amazon States Language", baser sur le JSON. Il permet d'executer toutes les opérations sur les services d'aws réalisable sur la console aws, ou par les sdk d'amazones. Ce services permet de facilité a transition entre les états mais ne réalise aucune execution. En revanche, il permet de manager des envionnement d'execution aws qui pourrons effectué du code, comme les lambdas.

Les avantage de cette outils t ça facilié de comprehenion t son suivit graphique qui le rend trs simple à débuger lorsqu'il  a des erreurs. Amazone facture ce services par le nombre de transition effectué à 0,025 USD, soit 0,022 Euro pour 1 000 transitions d'état. Ajouter à cela, le prix d'execution des Lambdas.

PROPOSITION #3 bis : CLOUD FORMATION

AWS Step funcins est un services web qui permet de coordiner les différent composant d'une chaîne d'opération ("Qu'on appelle généralement workflow ou flux d'opéraions"). Cette outils permet de séparé simplement chaque opérations et de pouvoir visualiser et suivre se flux de manière graphique (cf figure). 
Le language pour programmer cete chîne est le "Amazon States Language", baser sur le JSON. Il permet d'executer toutes les opérations sur les services d'aws réalisable sur la console aws, ou par les sdk d'amazones. Ce services permet de facilité a transition entre les états mais ne réalise aucune execution. En revanche, il permet de manager des envionnement d'execution aws qui pourrons effectué du code, comme les lambdas.

PROPOSITION #3 ters : Lambda et sdk

Il est possible de faire executer la pipeline uniquement par les lambdas. AWS fournis des sdk (libairie) qui contient des fonctions permetant d'effecuer toutes les opérations sur tous les services proposer par Amazone. Parmis les language de progamation disponible, le python à été choisi pour se prptotype, avec la librai developper par Amazone, Boto3.

Deux lambda on été utiliser pour cette pipeline de deploment. (cf. fig) La première Lambda va êter charger de récupéré le fichier 


Limitation de la solution définitivie.



ANNEXE :  Comment un client ayant acheter une soluion bluAge uilise la layer -- Protocole. 
